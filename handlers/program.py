from aiogram import Router, F
from aiogram.types import Message
from keyboards.index import main_menu
from database.queries import get_last_health_data

router = Router()

@router.message(F.text == "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—è")
async def get_program(message: Message):
    user_id = message.from_user.id
    saved_data = await get_last_health_data(user_id)
    
    if not saved_data or not saved_data.score:
        await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –æ—Ü–µ–Ω–∫—É –∑–¥–æ—Ä–æ–≤—å—è")
        return
    
    score = saved_data.score    
    program = generate_program(score)
    
    await message.answer(
        f"üèÜ –í–∞—à —É—Ä–æ–≤–µ–Ω—å –∑–¥–æ—Ä–æ–≤—å—è: {score:.1f}/10\n\n"
        f"üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n{program}",
        reply_markup=main_menu
    )

def generate_program(score: float) -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    if score >= 8:
        return (
            "‚úÖ –û—Ç–ª–∏—á–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ!\n\n"
            "‚Ä¢ 3-4 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –Ω–µ–¥–µ–ª—é\n"
            "‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 40-50 –º–∏–Ω—É—Ç\n"
            "‚Ä¢ –ö–∞—Ä–¥–∏–æ–Ω–∞–≥—Ä—É–∑–∫–∏: 30%\n"
            "‚Ä¢ –°–∏–ª–æ–≤—ã–µ: 40%\n"
            "‚Ä¢ –†–∞—Å—Ç—è–∂–∫–∞: 30%"
        )
    elif 6 <= score < 8:
        return (
            "üëç –•–æ—Ä–æ—à–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ\n\n"
            "‚Ä¢ 4 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –Ω–µ–¥–µ–ª—é\n"
            "‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 30-45 –º–∏–Ω—É—Ç\n"
            "‚Ä¢ –ö–∞—Ä–¥–∏–æ–Ω–∞–≥—Ä—É–∑–∫–∏: 40%\n"
            "‚Ä¢ –°–∏–ª–æ–≤—ã–µ: 40%\n"
            "‚Ä¢ –†–∞—Å—Ç—è–∂–∫–∞: 20%"
        )
    else:
        return (
            "üí™ –¢—Ä–µ–±—É–µ—Ç—Å—è —É–ª—É—á—à–µ–Ω–∏–µ\n\n"
            "‚Ä¢ 5 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é\n"
            "‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 20-30 –º–∏–Ω—É—Ç\n"
            "‚Ä¢ –ö–∞—Ä–¥–∏–æ–Ω–∞–≥—Ä—É–∑–∫–∏: 50%\n"
            "‚Ä¢ –†–∞—Å—Ç—è–∂–∫–∞: 50%"
        )